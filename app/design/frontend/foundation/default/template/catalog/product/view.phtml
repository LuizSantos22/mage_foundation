<?php
if (!function_exists('clean')) {
    function clean($string)
    {

        $string = str_replace(' ', '-', $string); // Replaces all spaces with hyphens.
//$string = preg_replace('/[^A-Za-z0-9\-]/', '', $string); // Removes special chars.
        $string = strtolower($string);
        $utf8 = array(
            '/[áàâãª]/u' => 'a',
            '/[ÁÀÂÃ]/u' => 'A',
            '/[äÄ]/u' => 'ae',
            '/[ÍÌÎÏ]/u' => 'I',
            '/[íìîï]/u' => 'i',
            '/[éèêë]/u' => 'e',
            '/[ÉÈÊË]/u' => 'E',
            '/[óòôõºö]/u' => 'o',
            '/[ÓÒÔÕÖ]/u' => 'O',
            '/[úùûü]/u' => 'u',
            '/[ÚÙÛÜ]/u' => 'U',
            '/ç/' => 'c',
            '/Ç/' => 'C',
            '/ñ/' => 'n',
            '/Ñ/' => 'N',
            '/–/' => '-', // UTF-8 hyphen to "normal" hyphen
            '/[’‘‹›‚]/u' => ' ', // Literally a single quote
            '/[“”«»„]/u' => ' ', // Double quote
            '/ /' => ' ', // nonbreaking space (equiv. to 0x160)
        );

        return preg_replace(array_keys($utf8), array_values($utf8), $string); // Replaces multiple hyphens with single one.
    }
}
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div class="product-view">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post"
              id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>"/>
                <input type="hidden" name="related_product" id="related-products-field" value=""/>
            </div>
            <div class="product-img-box">
                <?php echo $this->getChildHtml('media') ?>
                <?php if ($_product->getData('umweltpraemie') == '1'): ?>
                    <div class="product-environmental-bonus">
                        <picture>
                            <source srcset="<?php echo $this->getSkinUrl('dist/assets/img/umweltpraemie-700x425px.webp', array('_secure'=>true)) ?>" type="image/webp">
                            <source srcset="<?php echo $this->getSkinUrl('dist/assets/img/umweltpraemie-700x425px.jpg', array('_secure'=>true)) ?>" type="image/jpeg">
                            <img class="float-center lazy" data-src="<?php echo $this->getSkinUrl('dist/assets/img/umweltpraemie-700x425px.jpg', array('_secure'=>true)) ?>" alt="Umweltprämie Banner">
                        </picture>
                    </div>
                <?php endif; ?>
            </div>
            <div class="product-shop">
                <ul class="pricing-table">
                    <li class="title">
                        <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                    </li>
                    <li class="bullet-item">
                        <p class="sku"><?php echo $this->__('Artikelnummer: ') ?>
                            <span><?php echo $_product->getSku() ?></span>
                        </p>
                    </li>
                    <?php echo $this->getChildHtml('product_type_data') ?>
                    <?php if (!empty($_product->getData('follower'))): ?>
                        <li class="bullet-item">
                            <a class="button follower"
                               href="<?php echo $this->getUrl('', array('_direct' => $_product->getData('follower'))); ?>"><?php echo $this->__('Nachfolger
                                zeigen'); ?></a>
                        </li>
                    <?php endif; ?>
                    <?php if (!empty($_product->getAttributeText('manufacturer'))): ?>
                        <li class="description">
                            <div class="product-brand">
                                <?php $brand = $_product->getAttributeText('manufacturer') ?>
                                <a href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB) . 'hersteller/' . clean($brand) ?>">
                                    <img class="lazy" data-src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA); ?>catalog/brands/<?php echo clean($brand) ?>.png"
                                         alt="<?php echo $brand ?> Logo"
                                         title="<?php echo $this->__('Zeige alle Artikel von %s', $brand) ?>">
                                </a>
                            </div>
                        </li>
                        <li class="bullet-item">
                            <a href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB) . 'hersteller/' . clean($brand) ?>">
                                <?php echo $this->__('Zeige alle Artikel von %s', $brand) ?>
                            </a>
                        </li>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('related_products') ?>
                    <?php if (!$this->hasOptions()): ?>
                        <?php if ($_product->isSaleable()): ?>
                            <?php echo $this->getChildHtml('addtocart') ?>
                            <?php if ($this->helper('wishlist')->isAllow() || $_compareUrl = $this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <?php endif; ?>
                        <?php endif; ?>
                        <?php echo $this->getChildHtml('addto') ?>
                        <?php echo $this->getChildHtml('extra_buttons') ?>
                    <?php elseif (!$_product->isSaleable()): ?>
                        <li class="cta-button">
                            <?php echo $this->getChildHtml('addto') ?>
                        </li>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('alert_urls') ?>
                    <?php echo $this->getChildHtml('extrahint') ?>
                    <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                        <li class="bullet-item">
                            <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                        </li>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('other'); ?>
                </ul>
            </div>
        </form>
        <script>
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function (button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    if (!url) {
                        url = jQuery('#product_addtocart_form').attr('action');
                    }
                    url = url.replace("checkout/cart", "ajax/cart");
                    var data = jQuery('#product_addtocart_form').serialize();
                    data += '&isAjax=1';
                    jQuery('.please-wait').show();
                    try {
                        jQuery.ajax({
                            url: url,
                            dataType: 'json',
                            type: 'post',
                            data: data,
                            success: function (data) {
                                jQuery('.please-wait').hide();
                                //alert(data.status + ": " + data.message);
                                if (jQuery('.header-bottom .account .menu')) {
                                    jQuery('.header-bottom .account .menu').replaceWith(data.toplink);
                                }
                                if (jQuery('#productAddToCartModal .qty span')) {
                                    jQuery('#productAddToCartModal .qty span').html(data.qty);
                                }
                                jQuery('#productAddToCartModal').foundation('open');
                            }
                        });
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function (button, url) {
                if (this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);

            var productUpdateToCartForm = new VarienForm('product_addtocart_form');
            productUpdateToCartForm.submit = function (button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    if (!url) {
                        url = jQuery('#product_addtocart_form').attr('action');
                    }
                    url = url.replace("checkout/cart", "ajax/cart");
                    var data = jQuery('#product_addtocart_form').serialize();
                    data += '&isAjax=1';
                    jQuery('.please-wait').show();
                    try {
                        jQuery.ajax({
                            url: url,
                            dataType: 'json',
                            type: 'post',
                            data: data,
                            success: function (data) {
                                jQuery('.please-wait').hide();
                                //alert(data.status + ": " + data.message);
                                if (jQuery('.header-bottom .account .menu')) {
                                    jQuery('.header-bottom .account .menu').replaceWith(data.toplink);
                                }
                                jQuery('#productUpdateToCartModal').foundation('open');
                            }
                        });
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }
                }
            }.bind(productUpdateToCartForm);

            productUpdateToCartForm.submitLight = function (button, url) {
                if (this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productUpdateToCartForm);
        </script>
    <div class="reveal" id="productAddToCartModal" data-reveal>
        <p class="color-success"><?php echo $this->__('Sie haben dieses Produkt in Ihren Warenkorb gelegt'); ?></p>
        <div class="grid-x grid-margin-x grid-padding-x align-middle">
            <div class="cell small-12 medium-6">
                <p>
                    <img src="<?php echo $this->helper('catalog/image')->init($_product, 'image')->constrainOnly(false)->keepAspectRatio(true)->keepFrame(true)->resize(250, 250) ?>"
                         alt="<?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>"
                         title="<?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>"
                    class="float-center"/></p>
            </div>
            <div class="cell small-12 medium-6">
                <p class="h3"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></p>
                <p class="qty"><?php echo $this->__('Qty:'); ?> <span>0</span></p>
            </div>
        </div>
        <div class="button-set text-center">
            <a data-close aria-label="Close modal" class="hollow button">Weitershoppen</a>
            <a href="<?php echo Mage::getUrl('', array('_direct' => 'checkout/cart')); ?>" class="button">Zum
                Warenkorb</a>
        </div>
        <button class="close-button" data-close aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="reveal" id="productUpdateToCartModal" data-reveal>
        <p class="color-success"><?php echo $this->__('Sie haben dieses Produkt aktualisiert'); ?></p>
        <div class="grid-x grid-margin-x grid-padding-x align-middle">
            <div class="cell small-12 medium-6">
                <p>
                    <img src="<?php echo $this->helper('catalog/image')->init($_product, 'image')->constrainOnly(false)->keepAspectRatio(true)->keepFrame(true)->resize(250, 250) ?>"
                         alt="<?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>"
                         title="<?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>"
                         class="float-center"/></p>
            </div>
            <div class="cell small-12 medium-6">
                <p class="h3"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></p>
            </div>
        </div>
        <div class="button-set text-center">
            <a data-close aria-label="Close modal" class="hollow button">Weitershoppen</a>
            <a href="<?php echo Mage::getUrl('', array('_direct' => 'checkout/cart')); ?>" class="button">Zum
                Warenkorb</a>
        </div>
        <button class="close-button" data-close aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="product-collateral">
        <?php foreach ($this->getChildGroup('detailed_info', 'getChildHtml') as $alias => $html): ?>
            <div class="box-collateral <?php echo "box-{$alias}" ?>">
                <?php if ($title = $this->getChildData($alias, 'title')): ?>
                    <h2><?php echo $this->escapeHtml($title); ?></h2>
                <?php endif; ?>
                <?php echo $html; ?>
            </div>
        <?php endforeach; ?>
        <?php echo $this->getChildHtml('product_additional_data') ?>
        <?php echo $this->getChildHtml('attachments') ?>
    </div>
</div>